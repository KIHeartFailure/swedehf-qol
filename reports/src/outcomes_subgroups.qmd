```{r}
#| label: outcomessubfunc
#| cache: true
#| cache.comments: false

coxvars <- modvars
coxvars[modvars %in% stratavars] <- paste0("strata(", coxvars[modvars %in% stratavars], ")")

outcomessubfunc <- function(time = "sos_outtime_death", event = "sos_out_death", xvar = "shf_qol_cat", intvar) {
  levs <- levels(rsdata %>% pull(!!sym(xvar)))

  nlevs <- length(levs)

  levsint <- levels(rsdata %>% pull(!!sym(intvar)))
  nlevsint <- length(levsint)

  out <- data.frame(matrix(NA, ncol = 7, nrow = (nlevsint + 1) * (nlevs - 1)))
  colnames(out) <- c("qol", "var", "hr", "lci", "uci", "p", "pint")

  out[, 1] <- rep(levs[2:nlevs], nlevsint + 1)
  out[, 2] <- rep(c(intvar, paste0("  ", levsint)), each = (nlevs - 1))

  ## adjusted regression
  coxvars2 <- coxvars[!modvars %in% c(intvar)]
  for (i in seq_along(levsint)) {
    mod <- with(imprsdata, coxph(formula(paste0(
      "Surv(", time, ",", event, " == 'Yes') ~ ", xvar, " * relevel(", intvar, ", ref = '", levsint[i], "') +", paste(coxvars2, collapse = " + ")
    ))))
    smod <- summary(pool(mod))

    out[out$var == paste0("  ", levsint[i]), "hr"] <- exp(smod$estimate[1:(nlevs - 1)])
    out[out$var == paste0("  ", levsint[i]), "lci"] <- exp(smod$estimate[1:(nlevs - 1)] - global_z05 * smod$std.error[1:(nlevs - 1)])
    out[out$var == paste0("  ", levsint[i]), "uci"] <- exp(smod$estimate[1:(nlevs - 1)] + global_z05 * smod$std.error[1:(nlevs - 1)])
    out[out$var == paste0("  ", levsint[i]), "p"] <- fn(smod$p.value[1:(nlevs - 1)], dig = 3, p = TRUE)

    if (i == 1) {
      mod_noint <- with(imprsdata, coxph(formula(paste0(
        "Surv(", time, ",", event, " == 'Yes') ~ ", xvar, " + relevel(", intvar, ", ref = '", levsint[i], "') +", paste(coxvars2, collapse = " + ")
      ))))
      pint <- mice::D1(mod, mod_noint)
      out[1, "pint"] <- fn(pint$result[, "P(>F)"], p = T, dig = 3)
    }
  }
  return(out)
}

outcomessub <- outcomessubfunc(intvar = "shf_sex")
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "shf_age_cat"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "shf_location"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "shf_durationhf"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "shf_ef_cat"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "shf_nyha_cat"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "shf_ntprobnp_cat"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "shf_gfrckdepi_cat"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "sos_com_stroke"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "scb_famtype"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "scb_child"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "scb_education"))
outcomessub <- bind_rows(outcomessub, outcomessubfunc(intvar = "scb_dispincome_cat"))
```

```{r}
#| label: fig-outcomes-subgroup
#| cache: true
#| cache.comments: false
#| dependson: outcomessubfunc
#| fig-cap: "Association between all-cause death and QoL - Subgroups"
#| fig-width: 10
#| fig-height: 6

subplot <- outcomessub %>%
  mutate(
    var_tmp = var,
    var_tmp = str_replace_all(var_tmp, "(_cat2|_cat)", ""),
    # if shf/sos combination  will still get org label
    var_tmp = str_replace_all(var_tmp, "shf_sos_com_", "sos_com_"),
    var_tmp = str_remove_all(var_tmp, " within year")
  )

subplot <- left_join(subplot,
  metavars %>%
    select(variable, label, unit),
  by = c("var_tmp" = "variable")
) %>%
  mutate(
    Variable = coalesce(label, var_tmp),
    Variable = if_else(!is.na(unit),
      paste0(Variable, " (", unit, ")"),
      Variable
    ),
    # small fixes
    Variable = str_replace_all(Variable, fixed("Disposable income (100 SEK)"), "Income"),
    Variable = str_replace_all(Variable, ">=", "\u2265"),
    Variable = str_replace_all(Variable, "<=", "\u2264"),
    hrci = if_else(!is.na(hr), paste0(
      fn(hr, dig = 2),
      " (", fn(lci, dig = 2),
      "-", fn(uci, dig = 2), ")"
    ), NA),
    cols = factor(case_when(
      p >= 0.05 ~ 2,
      hr >= 1 ~ 1,
      hr < 1 ~ 3
    ))
  ) %>%
  group_by(qol) %>%
  mutate(
    order = forcats::fct_rev(forcats::fct_inorder(as.character(n():1))),
    ordergrid = ifelse(str_detect(Variable, "  "), order, NA_character_)
  ) %>%
  ungroup()

# plot it
size_use <- 10

# min(subplot$lci, na.rm = T)
# max(subplot$uci, na.rm = T)

xmin <- .9
xmax <- 1.9

p1 <- ggplot(subplot %>% filter(qol == "0-25"), aes(x = hr, y = order, color = cols)) +
  # Add a reference dashed line at 1
  geom_vline(xintercept = 1, linetype = "dashed", color = "grey", linewidth = 0.6) +
  # Add dot plot and error bars
  geom_errorbar(aes(xmin = lci, xmax = uci), width = 0.9, linewidth = 0.3) +
  geom_point(size = 1.7, shape = 15) +
  scale_color_manual(values = global_cols[c(1:3)]) +
  theme_classic() +
  theme(
    text = element_text(size = size_use),
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title = element_blank(),
    axis.text.y = element_blank(),
    axis.line.y = element_line(colour = "white"),
    plot.margin = unit(c(0, 0, 0, 0), "mm"),
    panel.grid.major.y = element_line(colour = "grey94")
  ) +
  scale_x_continuous(trans = "log", breaks = c(xmin, 1, xmax), limits = c(xmin, xmax)) +
  scale_y_discrete(breaks = subplot %>% filter(qol == "0-25") %>% pull(ordergrid))

t1 <- ggplot(subplot %>% filter(qol == "0-25")) +
  geom_text(aes(y = order, x = 1, label = hrci), size = size_use / .pt * 0.8) +
  theme_classic() +
  theme(
    text = element_text(size = size_use),
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title = element_blank(),
    axis.text.y = element_blank(),
    axis.line.y = element_line(colour = "white"),
    plot.margin = unit(c(0, 0, 0, 0), "mm"),
    axis.line.x = element_line(color = "white"),
    axis.ticks.x = element_line(color = "white"),
    axis.text.x = element_text(color = "white")
  )

p2 <- ggplot(subplot %>% filter(qol == "26-50"), aes(x = hr, y = order, color = cols)) +
  # Add dot plot and error bars
  geom_errorbar(aes(xmin = lci, xmax = uci), width = 0.9, linewidth = 0.3) +
  geom_point(size = 1.7, shape = 15) +
  # Add a reference dashed line at 1
  geom_vline(xintercept = 1, linetype = "longdash", color = "grey") +
  scale_color_manual(values = global_cols[c(1:3)]) +
  theme_classic() +
  theme(
    text = element_text(size = size_use),
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title = element_blank(),
    axis.text.y = element_blank(),
    axis.line.y = element_line(colour = "white"),
    plot.margin = unit(c(0, 0, 0, 0), "mm"),
    panel.grid.major.y = element_line(colour = "grey94")
  ) +
  scale_x_continuous(trans = "log", breaks = c(xmin, 1, xmax), limits = c(xmin, xmax)) +
  scale_y_discrete(breaks = subplot %>% filter(qol == "0-25") %>% pull(ordergrid))

t2 <- ggplot(subplot %>% filter(qol == "26-50")) +
  geom_text(aes(y = order, x = 1, label = hrci), size = size_use / .pt * 0.8) +
  theme_classic() +
  theme(
    text = element_text(size = size_use),
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title = element_blank(),
    axis.text.y = element_blank(),
    axis.line.y = element_line(colour = "white"),
    plot.margin = unit(c(0, 0, 0, 0), "mm"),
    axis.line.x = element_line(color = "white"),
    axis.ticks.x = element_line(color = "white"),
    axis.text.x = element_text(color = "white")
  )

p3 <- ggplot(subplot %>% filter(qol == "51-75"), aes(x = hr, y = order, color = cols)) +
  # Add dot plot and error bars
  geom_errorbar(aes(xmin = lci, xmax = uci), width = 0.9, linewidth = 0.3) +
  geom_point(size = 1.7, shape = 15) +
  # Add a reference dashed line at 1
  geom_vline(xintercept = 1, linetype = "longdash", color = "grey") +
  scale_color_manual(values = global_cols[c(1:3)]) +
  theme_classic() +
  theme(
    text = element_text(size = size_use),
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title = element_blank(),
    axis.text.y = element_blank(),
    axis.line.y = element_line(colour = "white"),
    plot.margin = unit(c(0, 0, 0, 0), "mm"),
    panel.grid.major.y = element_line(colour = "grey94")
  ) +
  scale_x_continuous(trans = "log", breaks = c(xmin, 1, xmax), limits = c(xmin, xmax)) +
  scale_y_discrete(breaks = subplot %>% filter(qol == "0-25") %>% pull(ordergrid))

t3 <- ggplot(subplot %>% filter(qol == "51-75")) +
  geom_text(aes(y = order, x = 1, label = hrci), size = size_use / .pt * 0.8) +
  theme_classic() +
  theme(
    text = element_text(size = size_use),
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title = element_blank(),
    axis.text.y = element_blank(),
    axis.line.y = element_line(colour = "white"),
    plot.margin = unit(c(0, 0, 0, 0), "mm"),
    axis.line.x = element_line(color = "white"),
    axis.ticks.x = element_line(color = "white"),
    axis.text.x = element_text(color = "white")
  )

pint <- ggplot(subplot %>% filter(qol == "51-75")) +
  geom_text(aes(y = order, x = 1, label = pint), size = size_use / .pt * 0.8) +
  theme_classic() +
  theme(
    text = element_text(size = size_use),
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title = element_blank(),
    axis.text.y = element_blank(),
    axis.line.y = element_line(colour = "white"),
    plot.margin = unit(c(0, 0, 0, 0), "mm"),
    axis.line.x = element_line(color = "white"),
    axis.ticks.x = element_line(color = "white"),
    axis.text.x = element_text(color = "white")
  )

labs <- ggplot(subplot %>% filter(qol == "0-25"), aes(x = hr, y = order)) +
  geom_blank() +
  theme_classic() +
  theme(
    text = element_text(size = size_use),
    legend.position = "none",
    axis.ticks.y = element_blank(),
    axis.title = element_blank(),
    axis.text.y = element_text(color = "black", hjust = 0),
    axis.line.y = element_line(colour = "white"),
    plot.margin = unit(c(0, 0, 0, 0), "mm"),
    axis.line.x = element_line(color = "white"),
    axis.ticks.x = element_line(color = "white"),
    axis.text.x = element_text(color = "white")
  ) +
  scale_y_discrete(
    breaks = subplot %>% filter(qol == "0-25") %>% pull(order),
    labels = subplot %>% filter(qol == "0-25") %>% pull(Variable)
  )

pall1 <- p1 + t1 +
  plot_layout(widths = c(3.5, 2)) +
  plot_annotation(
    title = "QoL 0-25 vs 76-100",
    subtitle = "Hazard Ratio (95% CI)",
    theme = theme(
      plot.title = element_text(hjust = 0.5),
      plot.subtitle = element_text(hjust = 0.5),
    )
  )

pall2 <- p2 + t2 +
  plot_layout(widths = c(3.5, 2)) +
  plot_annotation(
    title = "QoL 26-50 vs 76-100",
    subtitle = "Hazard Ratio (95% CI)",
    theme = theme(
      plot.title = element_text(hjust = 0.5),
      plot.subtitle = element_text(hjust = 0.5),
    )
  )

pall3 <- p3 + t3 +
  plot_layout(widths = c(3.5, 2)) +
  plot_annotation(
    title = "QoL 51-75 vs 76-100",
    subtitle = "Hazard Ratio (95% CI)",
    theme = theme(
      plot.title = element_text(hjust = 0.5),
      plot.subtitle = element_text(hjust = 0.5),
    )
  )

labs <- labs +
  plot_annotation(
    title = "Subgroup",
    subtitle = " ",
    theme = theme(
      plot.title = element_text(hjust = 0),
      plot.subtitle = element_text(hjust = 0),
    )
  )

pint <- pint +
  plot_annotation(
    title = "P-value",
    subtitle = "interaction",
    theme = theme(
      plot.title = element_text(hjust = 0.5),
      plot.subtitle = element_text(hjust = 0.5),
    )
  )

pall <- wrap_elements(labs) + wrap_elements(pall3) + wrap_elements(pall2) + wrap_elements(pall1) + wrap_elements(pint) +
  plot_layout(nrow = 1, widths = c(2, 4.2, 4.2, 4.2, 1))

create_pptx(pall)
pall
```
